@model Vidly.DTOs.OrderDto
@{
    ViewBag.Title = "NewOrder";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<h2>NewOrder</h2>
<!--
<form id="orderForm">

    <label>Card</label>

    <div id="card" class="tt-container">
        <input id="CardId" data-rule-validCard="true" placeholder="CardId" name="card" type="text" value="" class="form-control" />
        <input id="CardNumber" placeholder="CardNumber" name="card" type="text" value="" class="form-control" />
        <input id="CardBrand" placeholder="CardBrand" name="card" type="text" value="" class="form-control" />
        <input id="CardCode" placeholder="CardCode" name="card" type="text" value="" class="form-control" />
        <input id="CardOwnerFullName" placeholder="CardOwnerFullName" name="card" type="text" value="" class="form-control" />
        <input id="CardExpirationDate" placeholder="CardExpirationDate" name="card" type="text" value="" class="form-control" />
    </div>

    <button id="orderFormButton" class="btn btn-primary">Submit</button>
</form>-->
@using (Html.BeginForm("Save", "Orders", FormMethod.Post, new { id = "orderForm" }))
{
    <div class="form-group">
        @Html.LabelFor(c => c.CardId)
        @Html.TextBoxFor(c => c.CardId,new{id="cardIdTextBox"})
        @Html.ValidationMessageFor(c => c.CardId)
    </div>

    @Html.HiddenFor(c => c.MovieIdsList,new{id="movieIdsListForm"})
    <button type="submit" class="btn btn-primary">Save</button>
}


@section scripts
{
    <script>
        function validateCardNumLength() {
            let num = parseInt($('#cardIdTextBox').val());
            if (!num)
                return false;
            if (num.toString().length != 12)
                return false;
            return true;
        }

        async function validatePaymentInfo() {
            let num = parseInt($('#cardIdTextBox').val());
            cart = JSON.parse(localStorage.getItem("cart"));
            let data = {
                Id: num,
                Price: cart.Total
            };
            const res = await fetch('http://localhost:8080/card/',
                {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(data)
                });
            const resJson = await res.json();
            return resJson;
        };


        function validateCart() {
            cart = JSON.parse(localStorage.getItem("cart"));
            var movieIdList = [];

            if (!cart || cart.length == 0 || cart.MovieList.length == 0)
                return false;

            movieIdList = cart.MovieList.map(m => m.Id);
            let str = JSON.stringify(movieIdList);
            $("#movieIdsListForm").val(str);
            return true;
        }

        async function validation() {
            if (!validateCart()) {
                toastr.error('No movies selected.');
                return false;
            }
            if (!validateCardNumLength()) {
                toastr.error('The card id must be numeric 12 digits.');
                return false;
            }
            const res = await validatePaymentInfo();

            if (!res.valid) {
                toastr.error(res.error);
                return false;
            }
            return true;
        }

        $('#orderForm').submit(function(e) {
            e.preventDefault();
            validation(this)
                .then(res => {
                    if (res)
                        emptyCart();
                        this.submit();
                });
        });
    </script>
}
