
<style>
    /* The sticky class is added to the navbar with JS when it reaches its scroll position */
    .sticky {
        position: fixed;
        top: 0;
        width: 100%;
        z-index: 100;
    }

    /* Add some top padding to the page content to prevent sudden quick movement (as the navigation bar gets a new position at the top of the page (position:fixed and top:0) */
    .sticky + .content {
        padding-top: 60px;
    }
</style>
<nav class="navbar navbar-expand-lg navbar-light bg-light" id="navBar">
    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo01" aria-controls="navbarTogglerDemo01" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
    </button>
    <div class="collapse navbar-collapse" id="navbarTogglerDemo01">
        @Html.ActionLink("RdxMovies", "Index", "Home", null, new { @class = "navbar-brand" })
        <ul class="navbar-nav mr-auto mt-2 mt-lg-0">
            <li class="nav-item active">
                @Html.ActionLink("Movies", "Index", "Movies", null, new { @class = "nav-link" })
            </li>
        </ul>
        <ul class="navbar-navR">
            <li class="nav-item active">
                <a class="nav-link fa fa-shopping-cart"  style="font-size:30px" id="openCartButton"></a>
            </li>
        </ul>
        @Html.Partial("_LoginPartial")
    </div>
</nav>
<script>
    // When the user scrolls the page, execute myFunction
    window.onscroll = function() {myFunction()};

// Get the navbar
    var navbar = document.getElementById("navBar");

// Get the offset position of the navbar
    var sticky = navbar.offsetTop;

// Add the sticky class to the navbar when you reach its scroll position. Remove "sticky" when you leave the scroll position
    function myFunction() {
        if (window.pageYOffset >= sticky) {
            navbar.classList.add("sticky");
        } else {
            navbar.classList.remove("sticky");
        }
    }
</script>